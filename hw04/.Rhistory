flips <- sample(coin, size = 1000, replace = TRUE, prob = c(0.65, 0.35))
y <- cumsum(flips == 'heads') / 1000
x <- 1:1000
plot(x, y, type = 'l', ylim = c(0,1))
abline(h = 0.5, col = 'gray70')
abline(h = 0.65)
flips <- sample(coin, size = 100, replace = TRUE, prob = c(0.65, 0.35))
y <- cumsum(flips == 'heads') / 1000
x <- 1:1000
plot(x, y, type = 'l', ylim = c(0,1))
abline(h = 0.5, col = 'gray70')
abline(h = 0.65)
flips <- sample(coin, size = 100, replace = TRUE, prob = c(0.65, 0.35))
y <- cumsum(flips == 'heads') / 1000
x <- 1:1000
plot(x, y, type = 'l', ylim = c(0,1))
abline(h = 0.5, col = 'gray70')
abline(h = 0.65)
flips <- sample(coin, size = 100, replace = TRUE, prob = c(0.65, 0.35))
y <- cumsum(flips == 'heads') / 100
x <- 1:100
plot(x, y, type = 'l', ylim = c(0,1))
abline(h = 0.5, col = 'gray70')
abline(h = 0.65)
flips <- sample(coin, size = 100, replace = TRUE, prob = c(0.65, 0.35))
y <- cumsum(flips == 'heads') / 100
x <- 1:100
plot(x, y, type = 'l', ylim = c(0,1))
abline(h = 0.5, col = 'gray70')
abline(h = 0.65)
flips <- sample(coin, size = 100, replace = TRUE, prob = c(0.65, 0.35))
y <- cumsum(flips == 'heads') / 100
x <- 1:100
plot(x, y, type = 'l', ylim = c(0,1))
abline(h = 0.5, col = 'gray70')
abline(h = 0.65)
num_vowels <- function(x) {
vectorsss<- x[1:length(x)]
vowels <- vectorsss[grepl('[a|e|i|o|u]', vectorsss, ignore.case = TRUE)]
return(table(vowels))
}
count_vowels <- function(x) {
splitted <- split_chars(x)
vowels <- num_vowels(splitted)
return(vowels)
}
#testing
count_vowels("The quick brown fox jumps over the lazy dog")
split_chars <- function(x) {
splitted <- rep(0)
for (i in 1:nchar(x)) {
splitted[i] <- str_sub(x, start = i, end = i)
}
return(splitted)
}
#test:
split_chars('Go Bears!')
split_chars('Expecto Patronum')
num_vowels <- function(x) {
vectorsss<- x[1:length(x)]
vowels <- vectorsss[grepl('[a|e|i|o|u]', vectorsss, ignore.case = TRUE)]
return(table(vowels))
}
count_vowels <- function(x) {
splitted <- split_chars(x)
vowels <- num_vowels(splitted)
return(vowels)
#testing
count_vowels("The quick brown fox jumps over the lazy dog")
\
count_vowels <- function(x) {
splitted <- split_chars(x)
vowels <- num_vowels(splitted)
return(vowels)
}
#testing
count_vowels("The quick brown fox jumps over the lazy dog")
count_vowels("THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG")
is.character(num_vowels("The quick brown fox jumps over the lazy dog"))
counts
is.vector(rev(split_chars('Go Bears!')))
rev(split_chars('Go Bears!'))
setwd("~/Desktop/hw-stat133/hw04")
source('code/archive-functions.R')
source('../code/archive-functions.R')
source('code/archive-functions.R')
getpwd()
getwd()
source('code/archive-functions.R')
getwd()
source('../code/archive-functions.R')
setwd("~/Desktop/hw-stat133/hw04")
getwd()
getwd()
source('../code/archive-functions.R')
getwd()
source('../code/archive-functions.R')
getwd()
source('../code/archive-functions.R')
rev(split_chars('Go Bears!'))
t = 'abc'
t
class(t)
mode(t)
typeof(t)
is.string(t)
isstring(t)
is.character(split_char(t))
is.character(split_chars(t))
mode(split_chars(t))
?split_chars
c = 'a'+'b'
c = c('a','b')
c
paste(c,collapse="")
reverse_chars <- function(x) {
reversed <- split_chars(x)
return(paste(x, collapse = ""))
}
reverse_chars('Go Bears!')
reverse_chars <- function(x) {
reversed <- rev(split_chars(x))
return(paste(x, collapse = ""))
}
reverse_chars('Go Bears!')
reverse_chars <- function(x) {
reversed <- rev(split_chars(x))
return(paste(reversed, collapse = ""))
}
reverse_chars('Go Bears!')
emotion$content
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
raw_id
is.list(raw_id)
length(raw_id)
raw_id[i]
raw_id[97]
raw_id[97]
raw_id
raw_id[[68]]
length(raw_id[[68]])
length(raw_id[[67]])
raw_id[[67]]
raw_id[[66]]
length(raw_id[[66]])
nchar(raw_id[[66]])
nchar(raw_id[[67]])
nchar(raw_id[[68]])
real_id <- rep(0)
for (i in 1:length(raw_id)) {
if(nchar(raw_id[i]) <= 15) {
real_id[i] <- raw_id[i]
}
}
real_id
real_id <- rep(0)
for (i in 1:length(raw_id)) {
if(nchar(raw_id[i]) <= 15) {
real_id[i] <- raw_id[i]
}
}
real_id
real_id <- rep(0)
for (i in 1:length(raw_id)) {
if(nchar(raw_id[i]) <= 15 & nchar(row_id[i]) != 0) {
real_id[i] <- raw_id[i]
}
}
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
real_id <- rep(0)
for (i in 1:length(raw_id)) {
if(nchar(raw_id[i]) <= 15 & nchar(raw_id[i]) != 0) {
real_id[i] <- raw_id[i]
}
}
real_id
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
real_id <- rep(0)
for (i in 1:length(raw_id)) {
if(nchar(raw_id[[i]]) <= 15 & nchar(raw_id[[i]]) != 0) {
real_id[i] <- raw_id[i]
}
}
real_id <- rep(0)
for (i in 1:length(raw_id)) {
if(nchar(raw_id[[i]]) <= 15 & nchar(raw_id[[i]]) != 0) {
real_id[i] <- raw_id[i]
}
}
nchar(raw_id[[1]]) <= 15
nchar(raw_id[[1]]) <= 15 & nchar(raw_id[[1]]) != 0
nchar(raw_id[[2]]) <= 15 & nchar(raw_id[[2]]) != 0
raw_id
nchar(raw_id[[2]]) <= 15 & raw_id[[2]] != character(0)
nchar(raw_id[[1]]) <= 15 & raw_id[[1]] != character(0)
nchar(raw_id[[2]]) != 0
nchar(raw_id[[1]]) <= 15 & nchar(raw_id[[1]]) != 0
nchar(raw_id[[1]]) <= 15 & nchar(raw_id[[1]]) != 0
raw_id[[1]]
raw_id[[2]]
nchar(raw_id[[2]]) <= 15 & nchar(raw_id[[2]]) != 0
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
raw_id
real_id <- rep(0)
for (i in 1:length(raw_id)) {
if(nchar(raw_id[[i]]) <= 15 & nchar(raw_id[[i]]) != 0) {
real_id[i] <- raw_id[i]
}
}
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
raw_id
raw_id
raw_id
raw_id[100]
raw_id[[100]]
raw_id[[100]]
raw_id
nchar(raw_id[[2]]) <= 15 & nchar(raw_id[[2]]) != 0
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
#raw_id
#raw_id[[100]]
real_id <- rep(0)
for (i in 1:length(raw_id)) {
if(nchar(raw_id[[i]]) <= 15 & nchar(raw_id[[i]]) != 0) {
real_id[i] <- raw_id[i]
}
}
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
#raw_id
#raw_id[[100]]
real_id <- rep(0)
for (i in 1:length(raw_id)) {
if(nchar(raw_id[[i]]) <= 15 & nchar(raw_id[[i]]) != 0) {
real_id[i] <- raw_id[i]
}
}
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
#raw_id
#raw_id[[100]]
real_id <- rep(0)
for (i in 1:length(raw_id)) {
if (nchar(raw_id[[i]]) <= 15 & nchar(raw_id[[i]]) != 0) {
real_id[i] <- raw_id[i]
}
}
nchar(raw_id[[2]])
raw_id[[2]]
raw_id[2]
length(raw_id)
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
#raw_id
#raw_id[[100]]
real_id <- rep(0)
for (i in 1:length(raw_id)) {
if (nchar(raw_id[[i]]) <= 15 & nchar(raw_id[[i]]) != 0) {
real_id[i] <- raw_id[[i]]
}
}
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
#raw_id
#raw_id[[100]]
real_id <- rep(0)
for (i in 1:length(raw_id)) {
if (nchar(raw_id[[i]]) <= 15 & nchar(raw_id[[i]]) != 0) {
print("here")
real_id[i] <- raw_id[[i]]
}
}
nchar(raw_id[[2]]) <= 15 & nchar(raw_id[[2]]) != 0
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
#raw_id
#raw_id[[100]]
real_id <- rep(0)
for (i in 1:length(raw_id)) {
if (nchar(raw_id[[i]]) <= 15 & nchar(raw_id[[i]]) != 0) {
print(i)
print("here")
real_id[i] <- raw_id[[i]]
}
}
raw_id
raw_id[1:10]
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
#raw_id
#raw_id[[100]]
real_id <- rep(0)
for (i in 2:length(raw_id)) {
if (nchar(raw_id[[i]]) <= 15 & nchar(raw_id[[i]]) != 0) {
print(i)
print("here")
real_id[i] <- raw_id[[i]]
}
}
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
#raw_id
#raw_id[[100]]
real_id <- rep(0)
for (i in 4:length(raw_id)) {
if (nchar(raw_id[[i]]) <= 15 & nchar(raw_id[[i]]) != 0) {
print(i)
print("here")
real_id[i] <- raw_id[[i]]
}
}
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
#raw_id
#raw_id[[100]]
real_id <- rep(0)
for (i in 1:length(raw_id)) {
if (nchar(raw_id[[i]]) <= 15 & nchar(raw_id[[i]]) != 0) {
print(i)
print("here")
real_id[i] <- raw_id[[i]]
}
}
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
#raw_id
#raw_id[[100]]
real_id <- rep(0)
for (i in 2:length(raw_id)) {
if (nchar(raw_id[[i]]) <= 15 & nchar(raw_id[[i]]) != 0) {
print(i)
print("here")
real_id[i] <- raw_id[[i]]
}
}
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
#raw_id
#raw_id[[100]]
real_id <- rep(0)
for (i in 2:length(raw_id)) {
nchar(raw_id[[i]]) <= 15 & nchar(raw_id[[i]]) != 0
if (nchar(raw_id[[i]]) <= 15 & nchar(raw_id[[i]]) != 0) {
print(i)
print("here")
real_id[i] <- raw_id[[i]]
}
}
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
#raw_id
#raw_id[[100]]
real_id <- rep(0)
for (i in 1:length(raw_id)) {
nchar(raw_id[[i]]) <= 15 & nchar(raw_id[[i]]) != 0
if (nchar(raw_id[[i]]) <= 15 & nchar(raw_id[[i]]) != 0) {
print(i)
print("here")
real_id[i] <- raw_id[[i]]
}
}
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
#raw_id
#raw_id[[100]]
real_id <- rep(0)
for (i in 1:length(raw_id)) {
print(nchar(raw_id[[i]]) <= 15 & nchar(raw_id[[i]]) != 0)
if (nchar(raw_id[[i]]) <= 15 & nchar(raw_id[[i]]) != 0) {
print(i)
print("here")
real_id[i] <- raw_id[[i]]
}
}
nchar(raw_id[[2]])
nchar(raw_id[[2]]) + 5
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
#raw_id
#raw_id[[100]]
real_id <- rep(0)
for (i in 1:length(raw_id)) {
print(nchar(raw_id[[i]]) <= 15 & nchar(raw_id[[i]]) != 0L)
if (nchar(raw_id[[i]]) <= 15 & nchar(raw_id[[i]]) != 0) {
print(i)
print("here")
real_id[i] <- raw_id[[i]]
}
}
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
#raw_id
#raw_id[[100]]
real_id <- rep(0)
for (i in 1:length(raw_id)) {
print(nchar(raw_id[[i]]) <= 15 & nchar(raw_id[[i]]) != 0L)
if (nchar(raw_id[[i]]) <= 15 & nchar(raw_id[[i]]) != 0L) {
print(i)
print("here")
real_id[i] <- raw_id[[i]]
}
}
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
real_id <- rep(0)
for (i in 1:length(raw_id)) {
if(nchar(raw_id[[i]]) <= 15 & raw_id[[i]] != character(0)) {
real_id[i] <- raw_id[[i]]
}
}
real_id <- rep(0)
for (i in 1:length(raw_id)) {
if(nchar(raw_id[[i]]) <= 15) {
real_id[i] <- raw_id[[i]]
}
}
nchar(raw_id[[1]])
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
real_id <- rep(0)
for (i in 1:1) {
if(nchar(raw_id[[i]]) <= 15) {
real_id[i] <- raw_id[[i]]
}
}
real_id
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
real_id <- rep(0)
for (i in 1:2) {
if(nchar(raw_id[[i]]) <= 15) {
real_id[i] <- raw_id[[i]]
}
}
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
real_id <- rep(0)
for (i in 1:2) {
if(nchar(raw_id[[i]]) <= 15) {
real_id[i] <- raw_id[[i]]
}
}
real_id <- rep(0)
for (i in 1:2) {
if(nchar(raw_id[[i]]) <= 15) {
real_id[i] <- raw_id[[i]]
}
return(real_id)
}
real_id
real_id <- rep(0)
for (i in 1:3) {
if(nchar(raw_id[[i]]) <= 15) {
real_id[i] <- raw_id[[i]]
}
return(real_id)
}
real_id
real_id <- rep(0)
for (i in 1:3) {
if(nchar(raw_id[[i]]) <= 15) {
real_id[i] <- raw_id[[i]]
}
}
nchar(raw_id[[2]])
nchar(raw_id[[1]])
is.integer(nchar(raw_id[[1]]))
raw_id[[2]]
character(0) == 0
as.vector(raw_id)
unlist(raw_id)
length(unlist(raw_id))
length(raw_id)
length(unlist(raw_id))
length(raw_id)
length(unlist(raw_id))
unlist(raw_id, use.names = TRUE)
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
raw_id
raw_id[[68]]
nchar(raw_id[[68]])
nchar(raw_id[[68]]) <= 15
length(emotion$content)
nchar(raw_id[[68]]) <= 15
real_id <- list(0)
real_id
nchar(raw_id[[68]]) <= 15 & nchar(raw_id[[68]]) != 0
real_id <- rep(0)
length(raw_id[[68]])
real_id <- rep(0)
for (i in 1:length(emotion$content)) {
if(nchar(raw_id[[68]]) <= 15 & nchar(raw_id[[68]]) != 0) {
real_id[i] <- length(raw_id[[i]])
} else {
real_id[i] <- 0
}
real_id <- rep(0)
for (i in 1:length(emotion$content)) {
if(nchar(raw_id[[68]]) <= 15 & nchar(raw_id[[68]]) != 0) {
real_id[i] <- length(raw_id[[i]])
} else {
real_id[i] <- 0
}
}
real_id
\
real_id <- rep(0)
for (i in 1:length(emotion$content)) {
if(nchar(raw_id[[68]]) <= 15 & nchar(raw_id[[68]]) != 0) {
real_id[i] <- length(raw_id[[i]])
} else {
real_id[i] <- 0
}
}
raw_id <- str_extract_all(emotion$content, '\\@\\w+')
nchar(raw_id[[68]]) <= 15 & nchar(raw_id[[68]]) != 0
length(raw_id[[68]])
real_id <- rep(0)
for (i in 1:length(emotion$content)) {
if(nchar(raw_id[[68]]) <= 15 & nchar(raw_id[[68]]) != 0) {
real_id[i] <- length(raw_id[[i]])
} else {
real_id[i] <- 0
}
}
real_id
is.integer(nchar(raw_id[[1]]))
unlist(raw_id, use.names = TRUE)
length(raw_id)
